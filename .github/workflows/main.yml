name: Main CI/CD

on:
  push:
jobs:
  check:
    runs-on: ubuntu-latest
    name: Lint and test

    steps:
      - uses: actions/checkout@v2

      - name: Lint
        run: echo Linting ${{ github.ref }}
        
      - name: Test
        run: echo Testing ${{ github.ref }}

  build:
    runs-on: ubuntu-latest
    name: Build
    needs: check

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: echo Building ${{ github.ref }}!

  auto-updates:
    name: Determine required updates
    runs-on: ubuntu-latest
    needs: build
    outputs:
      environments: ${{ toJson(fromJson(steps.get-update-environments.outputs.data).search.nodes.*.title) }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: octokit/graphql-action@v2.x
        id: get-update-environments
        with:
          query: |
            query findEnvironments {
              search(type: ISSUE, query: "repo:${{ github.event.repository.full_name }} NOT in:title Production label:\"React ${{ steps.extract_branch.outputs.branch }}\"", first: 50) {
                nodes {
                  ... on Issue {
                    title
                  }
                }
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update:
    name: Update
    uses: aarontwf/actions-playground/.github/workflows/deploy.yaml@main
    needs: auto-updates
    if: github.event_name == 'push' && fromJson(needs.auto-updates.outputs.environments)[0] != null
    with:
      environments: ${{ needs.auto-updates.outputs.environments }}
